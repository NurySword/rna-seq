
R version 4.1.2 (2021-11-01) -- "Bird Hippie"
Copyright (C) 2021 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> # Load libraries needed for this analysis
> library(ballgown)

Attaching package: ‘ballgown’

The following object is masked from ‘package:base’:

    structure

> library(genefilter)
> library(dplyr)

Attaching package: ‘dplyr’

The following objects are masked from ‘package:ballgown’:

    contains, expr, last

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

> library(devtools)
Loading required package: usethis
> 
> # Define a path for the output PDF to be written
> outfile="/home/nury/workspace/rnaseq/de/ballgown/ref_only/Part2_ballgown_output.pdf"
> 
> # Load phenotype data
> pheno_data = read.csv("/home/nury/workspace/rnaseq/de/ballgown/ref_only/NORMAL_vs_TUMOR.csv")
> 
> # Display the phenotype data
> pheno_data
          ids    type
1 NORMAL_Rep1 NORMAL_
2 NORMAL_Rep2 NORMAL_
3 NORMAL_Rep3 NORMAL_
4  TUMOR_Rep1  TUMOR_
5  TUMOR_Rep2  TUMOR_
6  TUMOR_Rep3  TUMOR_
                                                                   path
1 /home/nury/workspace/rnaseq/expression/stringtie/ref_only/NORMAL_Rep1
2 /home/nury/workspace/rnaseq/expression/stringtie/ref_only/NORMAL_Rep2
3 /home/nury/workspace/rnaseq/expression/stringtie/ref_only/NORMAL_Rep3
4  /home/nury/workspace/rnaseq/expression/stringtie/ref_only/TUMOR_Rep1
5  /home/nury/workspace/rnaseq/expression/stringtie/ref_only/TUMOR_Rep2
6  /home/nury/workspace/rnaseq/expression/stringtie/ref_only/TUMOR_Rep3
> 
> # Load the ballgown object from file
> load('/home/nury/workspace/rnaseq/de/ballgown/ref_only/bg.rda')
> 
> # The load command, loads an R object from a file into memory in our R session. 
> # You can use ls() to view the names of variables that have been loaded
> ls()
[1] "bg"         "outfile"    "pheno_data"
> 
> # Print a summary of the ballgown object
> bg
ballgown instance with 227818 transcripts and 6 samples
> 
> # Open a PDF file where we will save some plots. We will save all figures and then view the PDF at the end
> pdf(file=outfile)
> 
> # Extract FPKM values from the 'bg' object
> fpkm = texpr(bg,meas="FPKM")
> 
> # View the last several rows of the FPKM table
> tail(fpkm)
       FPKM.NORMAL_Rep1 FPKM.NORMAL_Rep2 FPKM.NORMAL_Rep3 FPKM.TUMOR_Rep1
227813                0                0                0               0
227814                0                0                0               0
227815                0                0                0               0
227816                0                0                0               0
227817                0                0                0               0
227818                0                0                0               0
       FPKM.TUMOR_Rep2 FPKM.TUMOR_Rep3
227813               0               0
227814               0               0
227815               0               0
227816               0               0
227817               0               0
227818               0               0
> 
> # Transform the FPKM values by adding 1 and convert to a log2 scale
> fpkm = log2(fpkm+1)
> 
> # View the last several rows of the transformed FPKM table
> tail(fpkm)
       FPKM.NORMAL_Rep1 FPKM.NORMAL_Rep2 FPKM.NORMAL_Rep3 FPKM.TUMOR_Rep1
227813                0                0                0               0
227814                0                0                0               0
227815                0                0                0               0
227816                0                0                0               0
227817                0                0                0               0
227818                0                0                0               0
       FPKM.TUMOR_Rep2 FPKM.TUMOR_Rep3
227813               0               0
227814               0               0
227815               0               0
227816               0               0
227817               0               0
227818               0               0
> 
> # Create boxplots to display summary statistics for the FPKM values for each sample
> boxplot(fpkm,col=as.numeric(pheno_data$type)+1,las=2,ylab='log2(FPKM+1)')
Warning message:
In boxplot.default(groups, ...) : NAs introduced by coercion
> 
> # Display the transcript ID for a single row of data
> ballgown::transcriptNames(bg)[9463]
             9463 
"ENST00000665036" 
> 
> # Display the gene name for a single row of data 
> ballgown::geneNames(bg)[9463]
       9463 
"LINC01709" 
> 
> # Create a BoxPlot comparing the expression of a single gene for all replicates of both conditions
> plot(fpkm[9463,] ~ pheno_data$type, border=c(2,3), main=paste(ballgown::geneNames(bg)[9463],' : ', ballgown::transcriptNames(bg)[9463]),pch=19, xlab="Type", ylab='log2(FPKM+1)')
Error in plot.window(...) : need finite 'xlim' values
Calls: plot ... do.call -> plot -> plot.default -> localWindow -> plot.window
In addition: Warning messages:
1: In xy.coords(x, y, xlabel, ylabel, log) : NAs introduced by coercion
2: In min(x) : no non-missing arguments to min; returning Inf
3: In max(x) : no non-missing arguments to max; returning -Inf
4: In plot.window(...) : "border" is not a graphical parameter
Execution halted
